import cubify from './cubify';
import { applyFuncToShapes } from './helpers';

var reversePoints = function reversePoints(shape) {
  var m;
  var c;
  return shape.reverse().map(function (_ref, i) {
    var x = _ref.x,
        y = _ref.y,
        moveTo = _ref.moveTo,
        curve = _ref.curve;
    var point = {
      x: x,
      y: y
    };

    if (c) {
      var _c = c,
          x2 = _c.x1,
          y2 = _c.y1,
          x1 = _c.x2,
          y1 = _c.y2;
      point.curve = {
        type: 'cubic',
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2
      };
    }

    if (i === 0 || m) {
      point.moveTo = true;
    }

    m = moveTo;
    c = curve || null;
    return point;
  });
};

var reverse = function reverse(s) {
  return applyFuncToShapes(reversePoints, cubify(s));
};

export default reverse;