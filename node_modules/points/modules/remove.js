import { applyFuncToShapes } from './helpers';

var isBetween = function isBetween(a, b, c) {
  if (b.curve || c.curve) {
    return false;
  }

  var crossProduct = (c.y - a.y) * (b.x - a.x) - (c.x - a.x) * (b.y - a.y);

  if (Math.abs(crossProduct) > Number.EPSILON) {
    return false;
  }

  var dotProduct = (c.x - a.x) * (b.x - a.x) + (c.y - a.y) * (b.y - a.y);

  if (dotProduct < 0) {
    return false;
  }

  var squaredLengthBA = (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y);

  if (dotProduct > squaredLengthBA) {
    return false;
  }

  return true;
};

var removePoints = function removePoints(shape) {
  var s = [];

  for (var i = 0, l = shape.length; i < l; i++) {
    var a = s[s.length - 1];
    var b = shape[i + 1];
    var c = shape[i];

    if (!(a && b && c) || !isBetween(a, b, c)) {
      s.push(c);
    }
  }

  return s;
};

var remove = function remove(s) {
  return applyFuncToShapes(removePoints, s);
};

export default remove;